"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildMPAClient = void 0;
const vite_1 = require("vite");
const virtualEntry = 'client.js';
async function buildMPAClient(js, config) {
    const files = Object.keys(js);
    const themeFiles = files.filter((f) => !f.endsWith('.md'));
    const pages = files.filter((f) => f.endsWith('.md'));
    return vite_1.build({
        root: config.srcDir,
        base: config.site.base,
        logLevel: 'warn',
        build: {
            emptyOutDir: false,
            outDir: config.outDir,
            rollupOptions: {
                input: [virtualEntry, ...pages]
            }
        },
        plugins: [
            {
                name: 'vitepress-mpa-client',
                resolveId(id) {
                    if (id === virtualEntry) {
                        return id;
                    }
                },
                load(id) {
                    if (id === virtualEntry) {
                        return themeFiles
                            .map((file) => `import ${JSON.stringify(file)}`)
                            .join('\n');
                    }
                    else if (id in js) {
                        return js[id];
                    }
                }
            }
        ]
    });
}
exports.buildMPAClient = buildMPAClient;
//# sourceMappingURL=buildMPAClient.js.map